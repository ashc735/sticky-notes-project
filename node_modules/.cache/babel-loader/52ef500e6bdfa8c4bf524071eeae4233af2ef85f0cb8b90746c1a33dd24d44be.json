{"ast":null,"code":"var _jsxFileName = \"/Users/ashleycampbell/Desktop/sticky-notes-project/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport NotesList from \"./NotesList\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      notes: [{\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }],\n      searchText: \"\"\n    };\n    this.addNote = () => {\n      const newNote = {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      };\n      const newNotes = [newNote, ...this.state.notes];\n      this.setState({\n        notes: newNotes\n      });\n    };\n    this.onType = (editMeId, updatedKey, updatedValue) => {\n      const updatedNotes = this.state.notes.map(note => {\n        if (note.id !== editMeId) {\n          return note;\n        } else {\n          if (updatedKey === \"title\") {\n            note.title = updatedValue;\n            return note;\n          } else {\n            note.description = updatedValue;\n            return note;\n          }\n        }\n      });\n      this.setState({\n        notes: updatedNotes\n      });\n    };\n    this.onSearch = text => {\n      const newSearchText = text.toLowerCase();\n      const updatedNotes = this.state.notes.map(note => {\n        if (!newSearchText) {\n          note.doesMatchSearch = true;\n          return note;\n        } else {\n          const title = note.title.toLowerCase();\n          const description = note.description.toLowerCase();\n          const titleMatch = title.includes(newSearchText);\n          const descriptionMatch = description.includes(newSearchText);\n          const hasMatch = titleMatch || descriptionMatch;\n          note.doesMatchSearch = hasMatch;\n          return note;\n        }\n      });\n      this.setState({\n        notes: updatedNotes,\n        searchText: newSearchText\n      });\n    };\n    this.removeNote = noteId => {\n      const UpdatedNotes = this.state.notes.filter(note => note.id !== noteId);\n      this.setState({\n        notes: UpdatedNotes\n      });\n    };\n  }\n  componentDidUpdate() {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({\n        notes: savedNotes\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      onSearch: this.onSearch,\n      addNote: this.addNote,\n      searchText: this.state.searchText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(NotesList, {\n      removeNote: this.removeNote,\n      onType: this.onType,\n      notes: this.state.notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Header","NotesList","App","constructor","arguments","state","notes","id","Date","now","title","description","doesMatchSearch","searchText","addNote","newNote","newNotes","setState","onType","editMeId","updatedKey","updatedValue","updatedNotes","map","note","onSearch","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","removeNote","noteId","UpdatedNotes","filter","componentDidUpdate","stringifiedNotes","JSON","stringify","localStorage","setItem","componentDidMount","getItem","savedNotes","parse","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ashleycampbell/Desktop/sticky-notes-project/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport NotesList from \"./NotesList\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true,\n      },\n    ],\n    searchText: \"\",\n  };\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true,\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n  onType = (editMeId, updatedKey, updatedValue) => {\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n  onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({ notes: updatedNotes, searchText: newSearchText });\n  };\n  removeNote = (noteId) => {\n    const UpdatedNotes = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: UpdatedNotes });\n  };\n  componentDidUpdate() {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({ notes: savedNotes });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Header\n          onSearch={this.onSearch}\n          addNote={this.addNote}\n          searchText={this.state.searchText}\n        />\n        <NotesList\n          removeNote={this.removeNote}\n          onType={this.onType}\n          notes={this.state.notes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}